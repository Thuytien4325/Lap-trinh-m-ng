const API_BASE = "http://localhost:8000/api"; // N·∫øu c√≥ API, thay ƒë·ªïi URL t·∫°i ƒë√¢y

// üõ† H√†m g·ªçi API ho·∫∑c l·∫•y d·ªØ li·ªáu t·ª´ JSON
async function callAPI(endpoint, method = "GET", data = null, isJSON = false) {
  const config = {
    method,
    headers: {
      "Content-Type": "application/json",
    },
  };
  if (data) config.body = JSON.stringify(data);

  try {
    if (isJSON) {
      const response = await fetch(endpoint);
      return await response.json();
    } else {
      const response = await fetch(`${API_BASE}${endpoint}`, config);
      return await response.json();
    }
  } catch (error) {
    console.error("L·ªói API:", error);
    return { success: false, message: "L·ªói k·∫øt n·ªëi server!" };
  }
}

document.addEventListener("DOMContentLoaded", async () => {
  // üîê LOGIN
  const loginForm = document.getElementById("loginForm");
  if (loginForm) {
    loginForm.addEventListener("submit", async (e) => {
      e.preventDefault();
      const username = document.getElementById("loginUsername").value.trim();
      const password = document.getElementById("loginPassword").value.trim();
      const errorDiv = document.getElementById("loginError");

      if (!username || !password) {
        errorDiv.textContent = "Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin!";
        return;
      }

      const users = await callAPI("users.json", "GET", null, true);
      const user = users.find((u) => u.username === username && u.password === password);

      if (user) {
        errorDiv.textContent = "ƒêƒÉng nh·∫≠p th√†nh c√¥ng!";
        setTimeout(() => (window.location.href = "chat.html"), 1000);
      } else {
        errorDiv.textContent = "Sai t√†i kho·∫£n ho·∫∑c m·∫≠t kh·∫©u!";
      }
    });
  }

  // üìù REGISTER
  const registerForm = document.getElementById("registerForm");
  if (registerForm) {
    registerForm.addEventListener("submit", async (e) => {
      e.preventDefault();
      const username = document.getElementById("registerUsername").value.trim();
      const email = document.getElementById("registerEmail").value.trim();
      const password = document.getElementById("registerPassword").value.trim();
      const confirm = document.getElementById("registerConfirm").value.trim();
      const errorDiv = document.getElementById("registerError");

      if (!username || !email || !password || !confirm) {
        errorDiv.textContent = "Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin!";
        return;
      }
      if (password !== confirm) {
        errorDiv.textContent = "M·∫≠t kh·∫©u kh√¥ng kh·ªõp!";
        return;
      }

      alert("ƒêƒÉng k√Ω th√†nh c√¥ng!");
      window.location.href = "login.html";
    });
  }

  // üß† FORGOT PASSWORD
  const forgotForm = document.getElementById("forgotForm");
  if (forgotForm) {
    forgotForm.addEventListener("submit", async (e) => {
      e.preventDefault();
      const email = document.getElementById("emailInput").value.trim();
      const errorDiv = document.getElementById("forgotError");

      if (!email) {
        errorDiv.textContent = "Vui l√≤ng nh·∫≠p email!";
        return;
      }

      const resetTokens = await callAPI("reset_tokens.json", "GET", null, true);
      const token = resetTokens.find((t) => t.email === email);

      if (token) {
        errorDiv.textContent = "ƒê√£ g·ª≠i mail! Ki·ªÉm tra h·ªôp th∆∞.";
      } else {
        errorDiv.textContent = "Kh√¥ng t√¨m th·∫•y email!";
      }
    });
  }

  // üîÅ RESET PASSWORD
  const resetForm = document.getElementById("resetForm");
  if (resetForm) {
    const errorDiv = document.getElementById("resetError");
    const token = new URLSearchParams(window.location.search).get("token");

    if (!token) {
      errorDiv.textContent = "Li√™n k·∫øt kh√¥ng h·ª£p l·ªá!";
      setTimeout(() => (window.location.href = "login.html"), 3000);
      return;
    }

    resetForm.addEventListener("submit", async (e) => {
      e.preventDefault();
      const password = document.getElementById("newPassword").value.trim();
      const confirm = document.getElementById("confirmPassword").value.trim();

      if (!password || !confirm) {
        errorDiv.textContent = "Vui l√≤ng nh·∫≠p m·∫≠t kh·∫©u!";
        return;
      }
      if (password !== confirm) {
        errorDiv.textContent = "M·∫≠t kh·∫©u kh√¥ng kh·ªõp!";
        return;
      }

      alert("ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u th√†nh c√¥ng!");
      window.location.href = "login.html";
    });
  }

  // üì® HI·ªÇN TH·ªä TIN NH·∫ÆN
  async function loadMessages() {
    const messages = await callAPI("message.json", "GET", null, true);
    console.log("üì® Tin nh·∫Øn nh·∫≠n ƒë∆∞·ª£c:", messages);
  }
  loadMessages();


  
  // ‚ùå N√öT ƒê√ìNG FORM V·ªöI H·ªòP THO·∫†I X√ÅC NH·∫¨N
  const closeBtn = document.getElementById("closeLogin");
  if (closeBtn) {
    closeBtn.addEventListener("click", () => {
      const confirmClose = confirm("B·∫°n c√≥ ch·∫Øc mu·ªën r·ªùi kh·ªèi trang kh√¥ng?");
      if (confirmClose) {
        if (window.location.pathname.endsWith("index.html")) {
          window.close(); // ƒê√≥ng tr√¨nh duy·ªát n·∫øu ƒëang ·ªü index.html
        } else {
          window.location.href = "http://127.0.0.1:5500/Frontend/Dang%20ky%20tai%20khoan/index.html"; // Quay v·ªÅ index.html n·∫øu kh√¥ng ph·∫£i
        }
      }
    });   
  }
  
  // üõ† KI·ªÇM TRA M·∫¨T KH·∫®U H·ª¢P L·ªÜ
  function setupPasswordValidation(formId, passwordId, confirmPasswordId, errorId) {
    const form = document.getElementById(formId);
    if (!form) return;

    const passwordField = document.getElementById(passwordId);
    const confirmPasswordField = document.getElementById(confirmPasswordId);
    const errorDiv = document.getElementById(errorId);
    const submitButton = form.querySelector("button[type='submit']");

    if (!passwordField || !confirmPasswordField || !errorDiv || !submitButton) {
      console.error("L·ªói: Kh√¥ng t√¨m th·∫•y m·ªôt trong c√°c ph·∫ßn t·ª≠ trong form", formId);
      return;
    }

    function validatePasswordMatch() {
      if (passwordField.value.trim() === "" || confirmPasswordField.value.trim() === "") {
        errorDiv.textContent = "";
        submitButton.disabled = true;
        return;
      }

      if (passwordField.value !== confirmPasswordField.value) {
        errorDiv.textContent = "M·∫≠t kh·∫©u kh√¥ng kh·ªõp!";
        submitButton.disabled = true;
      } else {
        errorDiv.textContent = " ";
        submitButton.disabled = false;
      }
    }

    passwordField.addEventListener("input", validatePasswordMatch);
    confirmPasswordField.addEventListener("input", validatePasswordMatch);
  }

  setupPasswordValidation("registerForm", "registerPassword", "registerConfirm", "registerError");
  setupPasswordValidation("resetForm", "newPassword", "confirmPassword", "resetError");
});



